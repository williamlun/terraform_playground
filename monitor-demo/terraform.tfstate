{
  "version": 4,
  "terraform_version": "1.5.6",
  "serial": 77,
  "lineage": "256df7e7-5f39-e697-2281-d10ad5b48046",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "fastapi-demo",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "fastapi-monitor-demo",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "fastapi-demo",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "fastapi-monitor-demo",
                "first_deployed": 1721566898,
                "last_deployed": 1721571730,
                "name": "fastapi-demo",
                "namespace": "default",
                "notes": "1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=fastapi-monitor-demo,app.kubernetes.io/instance=fastapi-demo\" -o jsonpath=\"{.items[0].metadata.name}\")\n  export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath=\"{.spec.containers[0].ports[0].containerPort}\")\n  echo \"Visit http://127.0.0.1:8080 to use your application\"\n  kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT\n",
                "revision": 4,
                "values": "{\"env\":{\"OTLP_EXPORTER_ENDPOINT\":\"k8s-monitoring-alloy.monitor:4317\",\"SERVICE_NAME\":\"fastapi-app-for-opentelemetry-demo\",\"SERVICE_PORT\":8000},\"image\":{\"tag\":\"0.0.2\"}}",
                "version": "0.1.0"
              }
            ],
            "name": "fastapi-demo",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://williamlun.github.io/my_helm_repo/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "env.OTLP_EXPORTER_ENDPOINT",
                "type": "",
                "value": "k8s-monitoring-alloy.monitor:4317"
              },
              {
                "name": "env.SERVICE_NAME",
                "type": "",
                "value": "fastapi-app-for-opentelemetry-demo"
              },
              {
                "name": "env.SERVICE_PORT",
                "type": "",
                "value": "8000"
              },
              {
                "name": "image.tag",
                "type": "",
                "value": "0.0.2"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "grafana",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "grafana",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "11.1.0",
                "chart": "grafana",
                "first_deployed": 1721566899,
                "last_deployed": 1721566899,
                "name": "grafana",
                "namespace": "monitor",
                "notes": "1. Get your 'admin123' user password by running:\n\n   kubectl get secret --namespace monitor grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   grafana.monitor.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace monitor -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace monitor port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin123\n",
                "revision": 1,
                "values": "{\"adminPassword\":\"(sensitive value)\",\"adminUser\":\"admin123\",\"persistence\":{\"enabled\":true}}",
                "version": "8.3.6"
              }
            ],
            "name": "grafana",
            "namespace": "monitor",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "adminUser",
                "type": "",
                "value": "admin123"
              },
              {
                "name": "persistence.enabled",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [
              {
                "name": "adminPassword",
                "type": "",
                "value": "admin123"
              }
            ],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "8.3.6",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.monitoring"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana_k8s_monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "k8s-monitoring",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "k8s-monitoring",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.6.0",
                "chart": "k8s-monitoring",
                "first_deployed": 1721566955,
                "last_deployed": 1721572580,
                "name": "k8s-monitoring",
                "namespace": "monitor",
                "notes": "Welcome to Grafana Alloy!\n\nWelcome to Grafana Alloy!\n\nWelcome to Grafana Alloy!\n\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, k8s-monitoring-kube-state-metrics.monitor.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n",
                "revision": 3,
                "values": "{\"alloy-logs\":{\"controller\":{\"type\":\"deployment\"}},\"cluster\":{\"name\":\"docker-desktop\"},\"externalServices\":{\"loki\":{\"authMode\":\"none\",\"host\":\"http://loki.monitor:3100\",\"protocol\":\"loki\"},\"prometheus\":{\"authMode\":\"none\",\"host\":\"http://prometheus-server.monitor\",\"protocol\":\"remote_write\",\"queryEndpoint\":\"/api/v1/query\",\"writeEndpoint\":\"/api/v1/write\"},\"tempo\":{\"authMode\":\"none\",\"host\":\"tempo.monitor:4317\",\"protocol\":\"otlp\",\"tls\":{\"insecure\":true}}},\"logs\":{\"pod_logs\":{\"gatherMethod\":\"api\"}},\"metrics\":{\"node-exporter\":{\"enabled\":false}},\"opencost\":{\"enabled\":false},\"prometheus-node-exporter\":{\"enabled\":false},\"receivers\":{\"deployGrafanaAgentService\":false,\"grpc\":{\"disable_debug_metrics\":false},\"http\":{\"enabled\":false}},\"traces\":{\"enabled\":true}}",
                "version": "1.4.2"
              }
            ],
            "name": "k8s-monitoring",
            "namespace": "monitor",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "alloy-logs.controller.type",
                "type": "",
                "value": "deployment"
              },
              {
                "name": "cluster.name",
                "type": "",
                "value": "docker-desktop"
              },
              {
                "name": "externalServices.loki.authMode",
                "type": "",
                "value": "none"
              },
              {
                "name": "externalServices.loki.host",
                "type": "",
                "value": "http://loki.monitor:3100"
              },
              {
                "name": "externalServices.loki.protocol",
                "type": "",
                "value": "loki"
              },
              {
                "name": "externalServices.prometheus.authMode",
                "type": "",
                "value": "none"
              },
              {
                "name": "externalServices.prometheus.host",
                "type": "",
                "value": "http://prometheus-server.monitor"
              },
              {
                "name": "externalServices.prometheus.protocol",
                "type": "",
                "value": "remote_write"
              },
              {
                "name": "externalServices.prometheus.queryEndpoint",
                "type": "",
                "value": "/api/v1/query"
              },
              {
                "name": "externalServices.prometheus.writeEndpoint",
                "type": "",
                "value": "/api/v1/write"
              },
              {
                "name": "externalServices.tempo.authMode",
                "type": "",
                "value": "none"
              },
              {
                "name": "externalServices.tempo.host",
                "type": "",
                "value": "tempo.monitor:4317"
              },
              {
                "name": "externalServices.tempo.protocol",
                "type": "",
                "value": "otlp"
              },
              {
                "name": "externalServices.tempo.tls.insecure",
                "type": "",
                "value": "true"
              },
              {
                "name": "logs.pod_logs.gatherMethod",
                "type": "",
                "value": "api"
              },
              {
                "name": "metrics.node-exporter.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "opencost.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "prometheus-node-exporter.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "receivers.deployGrafanaAgentService",
                "type": "",
                "value": "false"
              },
              {
                "name": "receivers.grpc.disable_debug_metrics",
                "type": "",
                "value": "false"
              },
              {
                "name": "receivers.http.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "traces.enabled",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.4.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.grafana_loki",
            "helm_release.grafana_tempo",
            "kubernetes_namespace.monitoring"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana_loki",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "loki",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "loki",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "3.0.0",
                "chart": "loki",
                "first_deployed": 1721566900,
                "last_deployed": 1721566900,
                "name": "loki",
                "namespace": "monitor",
                "notes": "***********************************************************************\n Welcome to Grafana Loki\n Chart version: 6.5.2\n Chart Name: loki\n Loki version: 3.0.0\n***********************************************************************\n\n** Please be patient while the chart is being deployed **\n\nTip:\n\n  Watch the deployment status using the command: kubectl get pods -w --namespace monitor\n\nIf pods are taking too long to schedule make sure pod affinity can be fulfilled in the current cluster.\n\n***********************************************************************\nInstalled components:\n***********************************************************************\n* loki\n\nLoki has been deployed as a single binary.\nThis means a single pod is handling reads and writes. You can scale that pod vertically by adding more CPU and memory resources.\n\n\n***********************************************************************\nSending logs to Loki\n***********************************************************************\n\nYou can send logs from inside the cluster using the cluster DNS:\n\nhttp://loki.monitor.svc.cluster.local:3100/loki/api/v1/push\n\nYou can test to send data from outside the cluster by port-forwarding the gateway to your local machine:\n\n  kubectl port-forward --namespace monitor svc/loki 3100:3100 \u0026\n\nAnd then using http://127.0.0.1:3100/loki/api/v1/push URL as shown below:\n\n```\ncurl -H \"Content-Type: application/json\" -XPOST -s \"http://127.0.0.1:3100/loki/api/v1/push\"  \\\n--data-raw \"{\\\"streams\\\": [{\\\"stream\\\": {\\\"job\\\": \\\"test\\\"}, \\\"values\\\": [[\\\"$(date +%s)000000000\\\", \\\"fizzbuzz\\\"]]}]}\"\n```\n\nThen verify that Loki did received the data using the following command:\n\n```\ncurl \"http://127.0.0.1:3100/loki/api/v1/query_range\" --data-urlencode 'query={job=\"test\"}' | jq .data.result\n```\n\n***********************************************************************\nConnecting Grafana to Loki\n***********************************************************************\n\nIf Grafana operates within the cluster, you'll set up a new Loki datasource by utilizing the following URL:\n\nhttp://loki.monitor.svc.cluster.local:3100/\n",
                "revision": 1,
                "values": "{\"backend\":{\"replicas\":0},\"chunksCache\":{\"enabled\":false},\"deploymentMode\":\"SingleBinary\",\"gateway\":{\"enabled\":false},\"loki\":{\"auth_enabled\":false,\"commonConfig\":{\"replication_factor\":1},\"memcached\":{\"chunk_cache\":{\"enabled\":false},\"results_cache\":{\"enabled\":false}},\"schemaConfig\":{\"configs\":[{\"from\":\"2024-01-01\",\"index\":{\"period\":\"24h\",\"prefix\":\"loki_index_\"},\"object_store\":\"filesystem\",\"schema\":\"v13\",\"store\":\"tsdb\"}]},\"storage\":{\"type\":\"filesystem\"}},\"lokiCanary\":{\"enabled\":false},\"read\":{\"replicas\":0},\"resultsCache\":{\"enabled\":false},\"singleBinary\":{\"replicas\":1},\"test\":{\"enabled\":false},\"write\":{\"replicas\":0}}",
                "version": "6.5.2"
              }
            ],
            "name": "loki",
            "namespace": "monitor",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "chunksCache.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "gateway.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "loki.auth_enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "lokiCanary.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "resultsCache.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "test.enabled",
                "type": "",
                "value": "false"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\"backend\":\n  \"replicas\": 0\n\"deploymentMode\": \"SingleBinary\"\n\"loki\":\n  \"commonConfig\":\n    \"replication_factor\": 1\n  \"memcached\":\n    \"chunk_cache\":\n      \"enabled\": false\n    \"results_cache\":\n      \"enabled\": false\n  \"schemaConfig\":\n    \"configs\":\n    - \"from\": \"2024-01-01\"\n      \"index\":\n        \"period\": \"24h\"\n        \"prefix\": \"loki_index_\"\n      \"object_store\": \"filesystem\"\n      \"schema\": \"v13\"\n      \"store\": \"tsdb\"\n  \"storage\":\n    \"type\": \"filesystem\"\n\"read\":\n  \"replicas\": 0\n\"singleBinary\":\n  \"replicas\": 1\n\"write\":\n  \"replicas\": 0\n"
            ],
            "verify": false,
            "version": "6.5.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.monitoring"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana_tempo",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "tempo",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tempo",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.5.0",
                "chart": "tempo",
                "first_deployed": 1721566936,
                "last_deployed": 1721566936,
                "name": "tempo",
                "namespace": "monitor",
                "notes": "",
                "revision": 1,
                "values": "{\"persistence\":{\"enabled\":true},\"tempo\":{\"metricsGenerator\":{\"enabled\":true,\"remoteWriteUrl\":\"http://prometheus-server.monitor/api/v1/write\"},\"reportingEnabled\":false}}",
                "version": "1.10.1"
              }
            ],
            "name": "tempo",
            "namespace": "monitor",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "persistence.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "tempo.metricsGenerator.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "tempo.metricsGenerator.remoteWriteUrl",
                "type": "",
                "value": "http://prometheus-server.monitor/api/v1/write"
              },
              {
                "name": "tempo.reportingEnabled",
                "type": "",
                "value": "false"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.10.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.prometheus",
            "kubernetes_namespace.monitoring"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "prometheus",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.53.1",
                "chart": "prometheus",
                "first_deployed": 1721566902,
                "last_deployed": 1721566902,
                "name": "prometheus",
                "namespace": "monitor",
                "notes": "1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace monitor -l \"app.kubernetes.io/name=alertmanager,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9093 to use your application\"\n  kubectl --namespace monitor port-forward $POD_NAME 9093:80\n\nThe Prometheus server can be accessed via port 80 on the following DNS name from within your cluster:\nprometheus-server.monitor.svc.cluster.local\n\n\nGet the Prometheus server URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace monitor -l \"app.kubernetes.io/name=prometheus,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace monitor port-forward $POD_NAME 9090\n\n\nThe Prometheus alertmanager can be accessed via port 9093 on the following DNS name from within your cluster:\nprometheus-alertmanager.monitor.svc.cluster.local\n\n\nGet the Alertmanager URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace monitor -l \"app.kubernetes.io/name=alertmanager,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace monitor port-forward $POD_NAME 9093\n\n\n\nFor more information on running Prometheus, visit:\nhttps://prometheus.io/\n",
                "revision": 1,
                "values": "{\"kube-state-metrics\":{\"enabled\":false},\"prometheus-node-exporter\":{\"enabled\":false},\"prometheus-pushgateway\":{\"enabled\":false},\"server\":{\"extraFlags\":[\"web.enable-lifecycle\",\"web.enable-remote-write-receiver\"],\"persistentVolume\":{\"enabled\":true}}}",
                "version": "25.24.1"
              }
            ],
            "name": "prometheus",
            "namespace": "monitor",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "kube-state-metrics.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "prometheus-node-exporter.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "prometheus-pushgateway.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.extraFlags[0]",
                "type": "",
                "value": "web.enable-lifecycle"
              },
              {
                "name": "server.extraFlags[1]",
                "type": "",
                "value": "web.enable-remote-write-receiver"
              },
              {
                "name": "server.persistentVolume.enabled",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "25.24.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.monitoring"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitor",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "monitor",
                "resource_version": "302046",
                "uid": "3ebb7e68-9a0e-46fc-93b9-d82618ec0aeb"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    }
  ],
  "check_results": null
}
